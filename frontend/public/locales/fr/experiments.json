{
    "aRecurringRun": "a recurring run [fr]",
    "aRun": "a run [fr]",
    "cannotStartRun": "Cannot start run without pipeline version [fr]",
    "catchup": "Catchup [fr]",
    "catchupHelpText1": "Whether the recurring run should catch up if behind schedule. Defaults to true. [fr]",
    "catchupHelpText2": "For example, if the recurring run is paused for a while and re-enabled afterwards. If catchup=true, the scheduler will catch up on (backfill) each missed interval. Otherwise, it only schedules the latest interval if more than one interval is ready to be scheduled. [fr]",
    "catchupHelpText3": "Usually, if your pipeline handles backfill internally, you should turn catchup off to avoid duplicate backfill. [fr]",
    "chooseExperiment": "Choose an experiment [fr]",
    "choosePipelineVersion": "Choose a pipeline version [fr]",
    "chooseTriggerMethod": "Choose a method by which new runs will be triggered [fr]",
    "clonedRunDetails": "Could not get cloned run details [fr]",
    "clonedRunPipelineDef": "Could not find the cloned run's pipeline definition. [fr]",
    "closeJsonEditor": "Close Json Editor [fr]",
    "cronExpression": "cron expression [fr]",
    "editingCronExpression": "Allow editing cron expression. ( format is specified [fr]",
    "endDateBeforeStartDate": "End date/time cannot be earlier than start date/time [fr]",
    "errorFindPipeline": "Error: failed to find a pipeline corresponding to that of the original run: [fr]",
    "errorFindPipelineVersion": "Error: failed to find a pipeline version corresponding to that of the original run: [fr]",
    "errorParsePipeline": "Error: failed to parse the embedded pipeline's spec [fr]",
    "errorReadPipelineDef": "Error: failed to read the clone run's pipeline definition. [fr]",
    "errorRetrieveExperiment": "Error: failed to retrieve associated experiment [fr]",
    "errorRetrieveOrigRun": "Error: failed to retrieve original run [fr]",
    "errorRetrievePipeline": "Error: failed to retrieve pipeline [fr]",
    "errorRetrievePipelineVersion": "Error: failed to retrieve pipeline version [fr]",
    "errorRetrieveRecurrRun": "Error: failed to retrieve original recurring run [fr]",
    "errorRetrieveSpecRun": "Error: failed to retrieve the specified run [fr]",
    "errorRun": "Error: run [fr]",
    "errorRunProvided": "Error: somehow the run provided in the query params [fr]",
    "experimentCreationFailed": "Experiment creation failed [fr]",
    "experimentDefinition": "Think of an Experiment as a space that contains the history of all pipelines and their associated runs [fr]",
    "experimentDetails": "Experiment details [fr]",
    "experimentListError": "Error: failed to retrieve list of experiments. [fr]",
    "experimentName": "Experiment name [fr]",
    "experimentNameRequired": "Experiment name is required [fr]",
    "extraPermissionsRequired": "and extra permissions the specific task requires. [fr]",
    "filterExperiments": "Filter experiments [fr]",
    "filterPipelineVersions": "Filter pipeline versions [fr]",
    "hasEndDate": "Has end date [fr]",
    "hasStartDate": "Has start date [fr]",
    "last5Runs": "Last 5 runs [fr]",
    "last5RunsFailed": "Failed to load the last 5 runs of this experiment [fr]",
    "maxConcurrentRuns": "Maximum concurrent runs [fr]",
    "maxConcurrentRunsPositive": "For triggered runs, maximum concurrent runs must be a positive number [fr]",
    "minPermissionsArgoWorkflow": "minimum permissions required by argo workflows [fr]",
    "newExperiment": "New experiment [fr]",
    "newExperimentSuccess": "Successfully created new Experiment [fr]",
    "noEmbeddedPipeline": "had no embedded pipeline [fr]",
    "noExperimentsFound": "No experiments found. Click \"Create experiment\" to start. [fr]",
    "noExperimentsFoundTryAgain": "No experiments found. Create an experiment and then try again. [fr]",
    "noParams": "This pipeline has no parameters [fr]",
    "noPipelineVersionsFoundTryAgain": "No pipeline versions found. Select or upload a pipeline then try again. [fr]",
    "noteAccountNeeds": "Note, the service account needs [fr]",
    "noteStartEndDateCron": "Note: Start and end dates/times are handled outside of cron. [fr]",
    "noWorkflowManifest": "had no workflow manifest [fr]",
    "oneOff": "One-off [fr]",
    "openJsonEditor": "Open Json Editor [fr]",
    "parametersAppearSelectPipeline": "Parameters will appear after you select a pipeline [fr]",
    "parametersMissingValues": "Some parameters are missing values [fr]",
    "parseTriggerFailed": "Failed to parse original trigger [fr]",
    "pipelineVersion": "Pipeline Version [fr]",
    "pipelineVersionSelected": "A pipeline version must be selected [fr]",
    "recurring": "Recurring [fr]",
    "recurringRunCatchUp": "Whether the recurring run should catch up if behind schedule. Defaults to true. [fr]",
    "recurringRunName": "Recurring run config name [fr]",
    "runAssociatedWithExperiment": "This run will be associated with the following experiment [fr]",
    "runCreationFailed": "Run creation failed [fr]",
    "runDetails": "Run details [fr]",
    "runEvery": "Run every [fr]",
    "runName": "Run name [fr]",
    "runNameRequired": "Run name is required [fr]",
    "runParams": "Run parameters [fr]",
    "runStatusError": "Error: failed to retrieve run statuses for experiment [fr]",
    "runTrigger": "Run trigger [fr]",
    "runType": "Run Type [fr]",
    "runUsesKubernetesAccount": "This run will use the following Kubernetes service account. [fr]",
    "serviceAccountOptional": "Service Account (Optional) [fr]",
    "skipStep": "Skip this step [fr]",
    "specifyParams": "Specify parameters required by the pipeline [fr]",
    "startNewRun": "Start a new run [fr]",
    "startNewRunSuccess": "Successfully started new Run [fr]",
    "startRecurringRun": "Start a recurring run [fr]",
    "triggerType": "Trigger type [fr]",
    "useExperiment": "Use this experiment [fr]",
    "usePipelineClonedRun": "Using pipeline from cloned run [fr]",
    "usePipelinePrevPage": "Using pipeline from previous page [fr]",
    "usePipelineVersion": "Use this pipeline version [fr]",
    "viewPipeline": "View pipeline [fr]"
}